#!/bin/sh

set -ex

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# source debconf library
. /usr/share/debconf/confmodule

case "$1" in

  configure)

    db_get _APP_NAME_/mysql/standalone

    if [ "$RET" = "true" ]; then
      apt-get install -y mysql-server

      db_get mysql-server/root_password
      database_root_password="$RET"

      database_password=$(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-32};echo;)
      # TODO: check if db already exists
      mysql -u root -p"${database_root_password}" -e "CREATE USER '_APP_NAME_'@'127.0.0.1' IDENTIFIED BY '${database_password}';"
      mysql -u root -p"${database_root_password}" -e "CREATE DATABASE '_APP_NAME_';"
      mysql -u root -p"${database_root_password}" -e "GRANT ALL PRIVILEGES ON _APP_NAME_.* TO '_APP_NAME_'@'127.0.0.1'; FLUSH PRIVILEGES;";

      db_set _APP_NAME_/mysql/db_host "127.0.0.1"
      db_set _APP_NAME_/mysql/db_port "3306"
      db_set _APP_NAME_/mysql/db_username "_APP_NAME_"
      db_set _APP_NAME_/mysql/db_password "${database_password}"
      db_set _APP_NAME_/mysql/db_name "_APP_NAME_"
    fi

    db_get _APP_NAME_/mysql/db_host
    database_host="$RET"
    db_get _APP_NAME_/mysql/db_port
    database_port="$RET"
    db_get _APP_NAME_/mysql/db_username
    database_username="$RET"
    db_get _APP_NAME_/mysql/db_password
    database_password="$RET"
    db_get _APP_NAME_/mysql/db_name
    database_name="$RET"
  ;;

  abort-upgrade|abort-remove|abort-deconfigure)
    exit 0
  ;;

  *)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
  ;;

esac

exit 0